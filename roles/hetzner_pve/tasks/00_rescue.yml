---
- name: Check Local OS
  hosts: localhost  # You can target the localhost to check the local OS
  tasks:
    - name: compute passwd - Linux
      set_fact:
        root_password: "{{ hetzner_pve_root_pass | password_hash('sha512') }}"
      when: ansible_os_family == 'Debian'

    - name: compute passwd - MacOS
      set_fact:
        root_password: "{{ hetzner_pve_root_pass }}"
      when: ansible_os_family == 'Darwin'

- name: HETZNER - Read SSH key, if defined
  set_fact:
    ansible_port: 22
    hetzner_pve_ssh_keys:
      - "{{lookup('file', hetzner_pve_ssh_pubkey_path ) }}"

- name: Check for SSH Key - If not - create a new key
  community.crypto.openssh_keypair:
    path: "{{ hetzner_pve_ssh_keyfile }}"
    type: rsa
  delegate_to: localhost
  run_once: true
  when: hetzner_pve_ssh_keys is defined and (hetzner_pve_ssh_keys|length==0)

- name: Set public key
  ansible.legacy.set_fact:
    hetzner_pve_ssh_keys:
      - "{{ lookup('file', hetzner_pve_ssh_pubkey_path ) }}"
  when: hetzner_pve_ssh_keys is defined and (hetzner_pve_ssh_keys | length==0)

- name: HETZNER - Check for rescue mode
  ansible.builtin.debug:
    msg: "Restarting server in Rescue mode ..."

- name: HETZNER - Add SSH key
  community.hrobot.ssh_key:
    hetzner_user: "{{ hetzner_pve_hetzner_api_user }}"
    hetzner_password: "{{ hetzner_pve_hetzner_api_pass }}"
    state: present
    name: ansible proxmox hetzner
    public_key: "{{ hetzner_pve_ssh_keys.0 }}"
  delegate_to: localhost

- name: HETZNER - Get all SSH Keys
  community.hrobot.ssh_key_info:
    hetzner_user: "{{ hetzner_pve_hetzner_api_user }}"
    hetzner_password: "{{ hetzner_pve_hetzner_api_pass }}"
  register: ssh_keys
  delegate_to: localhost

- name: HETZNER - Enable a rescue system (64bit Linux) for the next boot
  community.hrobot.boot:
    hetzner_user: "{{ hetzner_pve_hetzner_api_user }}"
    hetzner_password: "{{ hetzner_pve_hetzner_api_pass }}"
    server_number: "{{ ENV_INVENTORY_SRV_NO }}"
    rescue:
      os: linux
      authorized_keys: "{{ ssh_keys.ssh_keys | map(attribute='fingerprint') | list }}"
  delegate_to: localhost

- name: HETZNER - Reset SERVER
  community.hrobot.reset:
    hetzner_user: "{{ hetzner_pve_hetzner_api_user }}"
    hetzner_password: "{{ hetzner_pve_hetzner_api_pass }}"
    server_number: "{{ ENV_INVENTORY_SRV_NO }}"
    reset_type: hardware
  delegate_to: localhost

- name: Wait for system comming up after activating Rescue
  ansible.legacy.wait_for:
    port: 22
    host: "{{ ENV_HOST_NAME }}"
    delay: 10
  delegate_to: localhost

- ansible.builtin.setup:

# needed to avoid system boot locks due to possibly leftover encrypted ext drive
#OS tries to access it at boot time via fuse for a reason
- name: HETZNER - Deploy Wipe Drives
  ansible.builtin.template:
    src: "drives_wipe.sh.j2"
    dest: /tmp/drives_wipe.sh
    owner: root
    group: root
    mode: '0755'
  when: hetzner_pve_swraid == 0 and ansible_hostname == 'rescue'

- name: HETZNER - Wipe Drives
  ansible.builtin.shell: '/tmp/drives_wipe.sh'
  when: hetzner_pve_swraid == 0 and ansible_hostname == 'rescue'

- name: Deploy Hetzner Post Install Drives Setup
  ansible.builtin.template:
    src: "post_install_drives_setup.sh.j2"
    dest: /tmp/post_install_drives_setup.sh
    owner: root
    group: root
    mode: '0755'
  when: hetzner_pve_swraid == 0 and ansible_hostname == 'rescue'
